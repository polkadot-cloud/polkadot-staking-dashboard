name: 'Update RPC Config'

on:
  push:
    branches: [main]
  schedule:
    - cron: '*/5 * * * *'

concurrency:
  group: update-rpc-config
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10.7.1
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Compile
        working-directory: packages/rpc-config
        run: pnpm compile

      - name: Configure git
        run: |
          git config user.name  "rossbulat"
          git config user.email "ross@jkrb.io"

      - name: Create branch if missing
        run: |
          branch=update/rpc-config

          # Create or switch to the branch locally
          if git rev-parse --verify update/rpc-config >/dev/null 2>&1; then
            git checkout update/rpc-config
          else
            git checkout -b update/rpc-config
          fi

      - name: Run
        working-directory: packages/rpc-config
        run: node dist/check-rpc.js

      - name: Exit if no changes
        run: |
          git diff --quiet packages/rpc-config/src/_generated/index.json \
            && echo "No changes detected, skipping." && exit 0

      - name: Create PR
        id: create_pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add packages/rpc-config/src/_generated/index.json
          git diff --cached --quiet \
            || git commit -m "chore(rpc-config): update RPC status"
          git push origin update/rpc-config --force
          branch=update/rpc-config
          title='chore(rpc-config): Update RPC status'
          body='This PR was generated automatically by a scheduled workflow.'
          label='automated'

          # Look for an existing PR
          pr=$(gh pr list --head "update/rpc-config" --json number --jq '.[0].number')

          if [ -z "$pr" ]; then
            echo "→ No existing PR, creating a new one"
            gh pr create \
              --head "update/rpc-config" \
              --base main \
              --title "$title" \
              --body "$body" \
              --label "$label"
          else
            echo "→ PR #$pr exists, updating title/body/labels"
            gh pr edit "$pr" \
              --title "$title" \
              --body "$body" \
              --add-label "$label"
          fi
          echo "pr_number=$pr" >> $GITHUB_OUTPUT
        shell: bash         

      - name: Merge Pull Request
        run: gh pr merge "${{ steps.create_pr.outputs.pr_number }}" --squash --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
